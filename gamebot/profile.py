import datetime as dt
from re import search

import emoji
from aiogram import types

from support import ponytypes
from support.bothelper import bot


async def UpdateFullProfile(message: types.Message, User: ponytypes.UserType):
    from support.bothelper import db_orders
    datediff: dt.timedelta = message.date - message.forward_date
    if datediff.total_seconds() > 30:
        await message.answer("–ü—Ä–∏—à–ª–∏ –º–Ω–µ –ø—Ä–æ—Ñ–∏–ª—å —Å–≤–µ–∂–µ–µ 30 —Å–µ–∫—É–Ω–¥")
        return
    _order: str = emoji.emoji_lis(message.text)[0]["emoji"]
    User.profile.stats.power = int(search(r"üí™–°–∏–ª–∞:.*\((\d+)\)", message.text).group(1))
    User.profile.stats.defence = int(search(r"üõ°–ó–∞—â–∏—Ç–∞:.*\((\d+)\)", message.text).group(1))
    User.profile.stats.agility = int(search(r"üèÉ–ü—Ä—ã—Ç—å:.*\((\d+)\)", message.text).group(1))
    User.profile.stats.instinct = int(search(r"üï∂–ò–Ω—Ç—É–∏—Ü–∏—è:.*\((\d+)\)", message.text).group(1))
    User.profile.stats.life = int(search(r"üíó–ñ–∏–≤—É—á–µ—Å—Ç—å:.*\((\d+)\)", message.text).group(1))
    order = await db_orders.find_one({"_id": _order})
    if not order:
        await message.answer("–¢—ã None —á—Ç–æ–ª–∏?\n–£—Ö–∞–¥–∏")
        return
    User.profile.order = _order
    User.profile.power = sum(User.profile.stats.values())
    User.profile.original = message.text
    User.profile.updatetime = dt.datetime.now()
    await User.save()
    await message.answer(f"–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω\n–°—É–º–º–∞ —Å—Ç–∞—Ç–æ–≤: {User.profile.power}")

async def UpdateSmallProfile(message: types.Message, User: ponytypes.UserType):
    await message.answer("–Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ <code>/full</code> –ø—Ä–æ—Ñ–∏–ª—å")
